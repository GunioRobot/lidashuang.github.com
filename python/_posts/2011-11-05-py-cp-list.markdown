---
title: python列表复制
excerpt: 在python里正确复制列表操作
location: python
layout: blog-post
--- 
	new = old[:]
大部人会用上面的方法复制列表,将old列表复制给new 。 这种方法也是用的最多的。   
 
#  一点点理论基础

首先，我们需要明白python是怎么管理对象和变量的。在python中，变量就是附加在对象的标签。    
例如下面的程序   
	a = [1,2,3]
这表示a指向了我们创建的列表[1,2,3] 但a不是列表。如果:   
	b = a
这并没有复制列表a给b,只是创建了个指向列表[1,2,3] 的标签b。就像下面的图：
![list](http://pic.yupoo.com/lidashuang/BuYEgneb/medish.jpg "list")
如果你修改了a,那么你也同时修改了b.
	>>> a.append(4)

	>>> print a
	[1, 2, 3, 4]

	>>> print b
	[1, 2, 3, 4]
我们可以通过内建函数id()来获取对象的唯一id, id就是对象在内存中的地址。   
	>>> id(a)
	3080501452L

	>>> id(b)
	3080501452L

	>>> c = []  # Create a new list
	>>> id(c)
	3080609228L

a 和 b指向同一内存地址，c指向了另一块不同的内存地址。   

# 回到我们的列表 
现在我们想复制a指向的列表，我们需要创建一个新的列表并给它加上标签b。  
![list2](http://pic.yupoo.com/lidashuang/BuYEgDjv/medish.jpg list2)
回到 b = a[:] ,操作符[:] 返回序列的切片。切片会创建一个新的列表，并提制原来列表的一部分   
到新列表中。   
	>>> a = [1, 2, 3, 4]
	>>> a[1:3]
	[2, 3]

	>>> id(a)
	3080104140L

	>>> id(a[1:3])
	3080513612L
在使用切片时，如果你省略第一个索引，切片会同第一个元素开始切片，如果你省略第二个索引，  
默认到列表的最后一个元素结束切片。   
	>>> a[:3]
	[1, 2, 3]

	>>> a[1:]
	[2, 3, 4]
通过调用a[:] 可以获得从第一个元素到最后一个元素的新列表。这复制a中的所有元素。但这不是唯    
一的方法，看下面的例子：
	>>> b = list(a)

	>>> id(a)
	3080104140L

	>>> id(b)
	3080520556L
这是不是更好，更易懂，更pythonic 。   

list()是用来构造列表用的，就是把序列构造成列表。要构造成列表的序列不必是列表，可以是任一
种序列。   
	>>> my_tuple = (1, 2, 3)
	>>> my_list = list(my_tuple)
	>>> print my_list
	[1, 2, 3]
在下面的情况下是不能用[:]的   
	>>> generator = (x * 3 for x in range(4))
	>>> list(generator)
	[0, 3, 6, 9]
因为生成的序列是没有下标的，你不能generator[0] 。   

大多数情况下[:]是可以代替list() , 但是如果用list()的话，你的程序会更加易读。



